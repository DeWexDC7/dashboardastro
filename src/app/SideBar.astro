---
let inventories = [];

// Función para obtener los datos de la API
const fetchData = async () => {
  try {
    const response = await fetch('http://localhost:5000/tipo_inventario');
    if (!response.ok) {
      throw new Error('Error al obtener los inventarios');
    }

    const result = await response.json();
    // El resultado es un array directamente
    inventories = result.map((item) => item.nombre_inv).filter(Boolean); // Filtra los nombres
    console.log('Inventarios obtenidos:', inventories);
  } catch (error) {
    console.error('Fetch error:', error.message);
  }
};

// Llama a la función para obtener los datos
fetchData();
---

<!-- Sidebar completo -->
<aside
  id="sidebar"
  class="fixed top-0 left-0 z-20 flex flex-col flex-shrink-0 hidden w-64 h-full pt-16 font-normal duration-75 lg:flex transition-width"
  aria-label="Sidebar"
>
  <div class="relative flex flex-col flex-1 min-h-0 pt-0 bg-white border-r border-gray-200 dark:bg-gray-800 dark:border-gray-700">
    <div
      class="flex flex-col flex-1 pt-5 pb-28 overflow-y-auto scrollbar scrollbar-thumb-rounded-md scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-700"
    >
      <!-- Sidebar dividido en secciones -->
      <div class="flex-1 px-3 space-y-1 bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">
        <!-- Elementos del menú -->
        <ul class="pb-2 space-y-2">
          <!-- Dashboard -->
          <li>
            <a
              href="/dashboard"
              class="flex items-center p-2 text-base text-gray-900 rounded-lg hover:bg-gray-100 group dark:text-gray-200 dark:hover:bg-gray-700"
            >
						<svg
								class="w-6 h-6 text-gray-500 transition duration-75 group-hover:text-gray-900 dark:text-gray-400 dark:group-hover:text-white"
								fill="currentColor"
								viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
								><path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path><path
									d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path></svg
							>  
              <span class="ml-3">Dashboard</span>
            </a>
          </li>

          <!-- CRUD -->
          <li>
						<button
						type="button"
						class="flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700"
						aria-controls="dropdown-crud"
						data-collapse-toggle="dropdown-crud"
					>
						<svg
							class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 group-hover:text-gray-900 dark:text-gray-400 dark:group-hover:text-white"
							fill="currentColor"
							viewBox="0 0 20 20"
							xmlns="http://www.w3.org/2000/svg"
							aria-hidden="true"
						>
							<path
								clip-rule="evenodd"
								fill-rule="evenodd"
								d="M.99 5.24A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25l.01 9.5A2.25 2.25 0 0116.76 17H3.26A2.267 2.267 0 011 14.74l-.01-9.5zm8.26 9.52v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75v.615c0 .414.336.75.75.75h5.373a.75.75 0 00.627-.74zm1.5 0a.75.75 0 00.627.74h5.373a.75.75 0 00.75-.75v-.615a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75v.625zm6.75-3.63v-.625a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75v.625c0 .414.336.75.75.75h5.25a.75.75 0 00.75-.75zm-8.25 0v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75v.625c0 .414.336.75.75.75H8.5a.75.75 0 00.75-.75zM17.5 7.5v-.625a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75V7.5c0 .414.336.75.75.75h5.25a.75.75 0 00.75-.75zm-8.25 0v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75V7.5c0 .414.336.75.75.75H8.5a.75.75 0 00.75-.75z"
							></path>
						</svg>
              <span class="flex-1 ml-3 text-left whitespace-nowrap" sidebar-toggle-item>CRUD</span>
							<svg
								sidebar-toggle-item
								class="w-6 h-6"
								fill="currentColor"
								viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
								><path
									fill-rule="evenodd"
									d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
									clip-rule="evenodd"></path></svg>
            </button>
            <ul id="dropdown-crud" class="hidden py-2 space-y-2">
              <!-- Inventarios cargados dinámicamente -->
              <script>
                document.addEventListener('DOMContentLoaded', async () => {
                  const dropdownCrud = document.getElementById('dropdown-crud');
                  dropdownCrud.innerHTML = '<li class="text-gray-500 pl-11">Cargando...</li>'; // Placeholder

                  try {
                    const response = await fetch('http://localhost:5000/tipo_inventario');
                    if (!response.ok) {
                      throw new Error('Error al obtener inventarios');
                    }
                    const result = await response.json();
                    const inventories = result.map((item) => item.nombre_inv).filter(Boolean);

                    dropdownCrud.innerHTML = ''; // Limpia el placeholder
                    if (inventories.length > 0) {
                      inventories.forEach((nombreInv) => {
                        const li = document.createElement('li');
                        li.innerHTML = `
                          <a
														href="/crud/users"
                            class="block p-2 pl-10 text-gray-900 rounded-lg hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700"
                          >
                            ${nombreInv}
                          </a>
                        `;
                        dropdownCrud.appendChild(li);
                      });
                    } else {
                      dropdownCrud.innerHTML = '<li class="text-gray-500 pl-11">No hay inventarios registrados</li>';
                    }
                  } catch (error) {
                    console.error('Error al cargar inventarios:', error.message);
                    dropdownCrud.innerHTML = '<li class="text-gray-500 pl-11">Error al cargar los datos</li>';
                  }
                });
              </script>
            </ul>
          </li>

          <!-- Pages -->
          <li>
						
            <a
              href="/pages"
              class="flex items-center p-2 text-base text-gray-900 rounded-lg hover:bg-gray-100 group dark:text-gray-200 dark:hover:bg-gray-700"
            >
						<svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 14 20">
							<path d="M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z"/>
					</svg>
              <span class="ml-3">Pages</span>
            </a>
          </li>

          <!-- Settings -->
          <li>
            <a
              href="/settings"
              class="flex items-center p-2 text-base text-gray-900 rounded-lg hover:bg-gray-100 group dark:text-gray-200 dark:hover:bg-gray-700"
            >
						<svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 14 20">
							<path d="M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z"/>
					</svg>
              <span class="ml-3">Settings</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</aside>

<!-- Script para colapsar el menú -->
<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButtons = document.querySelectorAll('[data-collapse-toggle]');
    toggleButtons.forEach((button) => {
      const targetId = button.getAttribute('aria-controls');
      const target = document.getElementById(targetId);

      button.addEventListener('click', () => {
        target.classList.toggle('hidden');
      });
    });
  });
</script>
